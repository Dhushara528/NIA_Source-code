pip install ucimlrepo
from ucimlrepo import fetch_ucirepo

# fetch dataset
individual_household_electric_power_consumption = fetch_ucirepo(id=235)

# data (as pandas dataframes)
X = individual_household_electric_power_consumption.data.features
y = individual_household_electric_power_consumption.data.targets

# metadata
print(individual_household_electric_power_consumption.metadata)

# variable information
print(individual_household_electric_power_consumption.variables)

import pandas as pd
import matplotlib.pyplot as plt
from statsmodels.tsa.arima_model import ARIMA
from ucimlrepo import fetch_ucirepo
from sklearn.metrics import mean_absolute_error

# Load the dataset
# fetch dataset
individual_household_electric_power_consumption = fetch_ucirepo(id=235)

# data (as pandas dataframes)
X = individual_household_electric_power_consumption.data.features
y = individual_household_electric_power_consumption.data.targets

# metadata
print(individual_household_electric_power_consumption.metadata)

# variable information
print(individual_household_electric_power_consumption.variables)

# Combine features and targets into a single DataFrame
df = pd.concat([X, y], axis=1)

# Explore the data
print(df.head())
print(df.info())
print(df.describe())

# Visualize the data
# Assuming 'date' and 'energy_consumption' are columns in your DataFrame
plt.plot(df['Date'], df['Global_active_power']) # Changed 'energy_consumption' to  'Global_active_power'
plt.xlabel('Date')
plt.ylabel('Energy Consumption')
plt.show()

# Handle missing values
df.fillna(df.mean(), inplace=True)

# Convert date column to datetime format
df['Date'] = pd.to_datetime(df['Date']) # Changed 'date' to 'Date'

# Extract time-of-day feature
df['hour'] = df['Date'].dt.hour
